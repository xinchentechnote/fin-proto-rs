// Code generated by fin-protoc. DO NOT EDIT.
use binary_codec::*;
use bytes::{Buf, BufMut, Bytes, BytesMut};

#[derive(Debug, Clone, PartialEq)]
pub struct PlatformStateInfo {
    pub platform_id: u16,
    pub platform_state: u16,
}

impl BinaryCodec for PlatformStateInfo {
    fn encode(&self, buf: &mut BytesMut) {
        buf.put_u16(self.platform_id);
        buf.put_u16(self.platform_state);
    }

    fn decode(buf: &mut Bytes) -> Option<PlatformStateInfo> {
        let platform_id = buf.get_u16();
        let platform_state = buf.get_u16();
        Some(Self {
            platform_id,
            platform_state,
        })
    }
}

#[cfg(test)]
mod platform_state_info_tests {
    use super::*;
    use bytes::BytesMut;

    #[test]
    fn test_platform_state_info_codec() {
        let original = PlatformStateInfo {
            platform_id: 1234,
            platform_state: 1234,
        };

        let mut buf = BytesMut::new();
        original.encode(&mut buf);
        let mut bytes = buf.freeze();

        let decoded = PlatformStateInfo::decode(&mut bytes).unwrap();
        assert_eq!(original, decoded);
    }
}
