// Code generated by fin-protoc. DO NOT EDIT.
use binary_codec::*;
use bytes::{Bytes, BytesMut};

#[derive(Debug, Clone, PartialEq)]
pub struct Extend103701 {
    pub cash_margin: char,
}

impl BinaryCodec for Extend103701 {
    fn encode(&self, buf: &mut BytesMut) {
        put_char(buf, self.cash_margin);
    }

    fn decode(buf: &mut Bytes) -> Option<Extend103701> {
        let cash_margin = get_char(buf)?;
        Some(Self { cash_margin })
    }
}

#[cfg(test)]
mod extend_103701_tests {
    use super::*;

    use bytes::BytesMut;

    #[test]
    fn test_extend_103701_codec() {
        let original = Extend103701 { cash_margin: 'a' };

        let mut buf = BytesMut::new();
        original.encode(&mut buf);
        let mut bytes = buf.freeze();

        let decoded = Extend103701::decode(&mut bytes).unwrap();

        assert_eq!(original, decoded);
    }
}
