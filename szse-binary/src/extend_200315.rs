// Code generated by fin-protoc. DO NOT EDIT.
use binary_codec::*;
use bytes::{Buf, BufMut, Bytes, BytesMut};

#[derive(Debug, Clone, PartialEq)]
pub struct Extend200315 {
    pub maturity_date: u32,
}

impl BinaryCodec for Extend200315 {
    fn encode(&self, buf: &mut BytesMut) {
        buf.put_u32(self.maturity_date);
    }

    fn decode(buf: &mut Bytes) -> Option<Extend200315> {
        let maturity_date = buf.get_u32();
        Some(Self { maturity_date })
    }
}

#[cfg(test)]
mod extend_200315_tests {
    use super::*;
    use bytes::BytesMut;

    #[test]
    fn test_extend_200315_codec() {
        let original = Extend200315 {
            maturity_date: 123456,
        };

        let mut buf = BytesMut::new();
        original.encode(&mut buf);
        let mut bytes = buf.freeze();

        let decoded = Extend200315::decode(&mut bytes).unwrap();
        assert_eq!(original, decoded);
    }
}
