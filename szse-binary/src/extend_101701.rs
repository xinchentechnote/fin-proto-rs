// Code generated by fin-protoc. DO NOT EDIT.
use binary_codec::*;
use bytes::{Buf, BufMut, Bytes, BytesMut};

#[derive(Debug, Clone, PartialEq)]
pub struct Extend101701 {
    pub cash_order_qty: i64,
}

impl BinaryCodec for Extend101701 {
    fn encode(&self, buf: &mut BytesMut) {
        buf.put_i64(self.cash_order_qty);
    }

    fn decode(buf: &mut Bytes) -> Option<Extend101701> {
        let cash_order_qty = buf.get_i64();
        Some(Self { cash_order_qty })
    }
}

#[cfg(test)]
mod extend_101701_tests {
    use super::*;
    use bytes::BytesMut;

    #[test]
    fn test_extend_101701_codec() {
        let original = Extend101701 {
            cash_order_qty: -123456789,
        };

        let mut buf = BytesMut::new();
        original.encode(&mut buf);
        let mut bytes = buf.freeze();

        let decoded = Extend101701::decode(&mut bytes).unwrap();
        assert_eq!(original, decoded);
    }
}
